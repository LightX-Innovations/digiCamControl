<controls:MetroWindow x:Class="CameraControl.windows.AutoExportPluginEdit"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:viewModel="clr-namespace:CameraControl.ViewModel"
        xmlns:translation="clr-namespace:CameraControl.Core.Translation;assembly=CameraControl.Core"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:dragDrop="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:Core="clr-namespace:CameraControl.Core;assembly=CameraControl.Core"
        xmlns:my="clr-namespace:CameraControl"
        Title="{translation:TranslateExtension LabelConfigurePlugin}" Height="450" Width="800" WindowStartupLocation="CenterOwner">
    <Window.DataContext>
        <viewModel:AutoExportPluginEditViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter1" />
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center">
            <Label Content="Name" Margin="2,0"/>
            <TextBox Width="250" Margin="2,0" Text="{Binding Name}"/>
            <CheckBox Content="Enabled" Margin="2,0" IsChecked="{Binding IsEnabled}"/>
        </StackPanel>
        <Button Grid.Row="0" Content="{translation:TranslateExtension LabelApplyToImage}" HorizontalAlignment="Right" Margin="5" IsEnabled="{Binding Config.IsRedy}" Command="{Binding ApplyCommand}"/>
        <TabControl Grid.ColumnSpan="3" Grid.RowSpan="2" Grid.Row="1" IsEnabled="{Binding Config.IsRedy}">
            <TabItem Header="{translation:TranslateExtension LabelPluginProperties}">
                <Grid>
                    <ScrollViewer>
                        <ContentControl Content="{Binding ConfigControl}"/>
                    </ScrollViewer>
                </Grid>
            </TabItem>
            <TabItem Header="{translation:TranslateExtension LabelPluginTransformPlugins}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Grid.Row="1" Header="Transform plugins" Margin="0" >
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="111*"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ListBox ItemsSource="{Binding TransformPluginItems}" SelectedItem="{Binding SelectedTransformPluginItem}" HorizontalContentAlignment="Stretch"
                                     dragDrop:DragDrop.IsDragSource="True" dragDrop:DragDrop.IsDropTarget="True">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                            <Grid >
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="30"/>
                                                </Grid.ColumnDefinitions>
                                                <Label Content="{Binding Name}"/>
                                                <materialDesign:PopupBox Grid.Column="1" PlacementMode="BottomAndAlignRightEdges" StaysOpen="False" HorizontalAlignment="Right" VerticalAlignment="Top"  PopupMode="Click">
                                                    <StackPanel>
                                                        <Button Content="Delete"  Style="{DynamicResource MetroCircleButtonStyle}" Command="{Binding DataContext.RemoveTransforPluginCommand, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" CommandParameter="{Binding}" HorizontalAlignment="Right"/>
                                                    </StackPanel>
                                                </materialDesign:PopupBox>
                                            </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            <controls:DropDownButton Name="DownButton" Padding="0" Margin="3" VerticalContentAlignment="Center" Content="{translation:TranslateExtension LabelAddPlugin}" ItemsSource="{Binding ImageTransformPlugins}" Grid.Row="1">
                                <controls:DropDownButton.ItemContainerStyle>
                                    <Style TargetType="MenuItem">
                                        <Setter Property="Command" Value="{Binding DataContext.AddTransforPluginCommand, RelativeSource={RelativeSource AncestorType={x:Type controls:DropDownButton}}}"/>
                                        <Setter Property="CommandParameter" Value="{Binding}"/>
                                    </Style>
                                </controls:DropDownButton.ItemContainerStyle>
                                <controls:DropDownButton.Icon>
                                    <Rectangle Width="20" Height="20">
                                        <Rectangle.Fill>
                                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_add}" />
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </controls:DropDownButton.Icon>
                            </controls:DropDownButton>
                            <Button Grid.Row="2" Content="{translation:TranslateExtension ButtonPreview}" Margin="3" Command="{Binding PreviewCommand}"/>
                            <CheckBox Grid.Row="3" Content="{translation:TranslateExtension LabelPreviewFullSize}" Margin="3" IsChecked="{Binding FullSize}" />
                        </Grid>
                    </GroupBox>
                    <GroupBox Grid.Row="1" Grid.Column="1" Header="Transform plugins properties" Margin="0">
                        <Grid>
                            <ScrollViewer>
                                <ContentControl Content="{Binding TransformControl}"/>
                            </ScrollViewer>
                        </Grid>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Header="{translation:TranslateExtension LabelConditions}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <CheckBox Content="{translation:TranslateExtension LabelExecuteAfterTransfer}" Margin="2" IsChecked="{Binding RunAfterTransfer}"/>
                    <StackPanel  Grid.Row="1" Orientation="Horizontal">
                        <Button  Height="45" Width="45" Margin="0" Style="{DynamicResource MetroCircleButtonStyle}" Command="{Binding AddConditionCommand}" HorizontalAlignment="Left">
                            <Rectangle Width="25" Height="25">
                                <Rectangle.Fill>
                                    <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_add}" />
                                </Rectangle.Fill>
                            </Rectangle>
                        </Button>
                        <Button  Height="45" Width="45" Margin="0" Style="{DynamicResource MetroCircleButtonStyle}" Command="{Binding CheckConditionCommand}" HorizontalAlignment="Left">
                            <Rectangle Width="25" Height="25">
                                <Rectangle.Fill>
                                    <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_check}" />
                                </Rectangle.Fill>
                            </Rectangle>
                        </Button>
                    </StackPanel>
                    <StackPanel Grid.Row="2" Orientation="Horizontal">
                        <Label Content="{translation:TranslateExtension LabelOperator}" Margin="2" Width="70" HorizontalContentAlignment="Center"/>
                        <Label Content="{translation:TranslateExtension LabelVariable}" Margin="2" Width="280" HorizontalContentAlignment="Center"/>
                        <Label Content="{translation:TranslateExtension LabelCondition}" Margin="2" Width="70" HorizontalContentAlignment="Center"/>
                        <Label Content="{translation:TranslateExtension LabelValue}" Margin="2" Width="280" HorizontalContentAlignment="Center"/>
                        <Label Content="{translation:TranslateExtension LabelDelete}" Margin="2" Width="70" HorizontalContentAlignment="Center"/>
                    </StackPanel>

                    <ListBox Grid.Row="3" ItemsSource="{Binding Config.Conditions}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <ComboBox SelectedItem="{Binding Operator}" ItemsSource="{Binding OperatorList}" Margin="2" Width="70"/>
                                    <ComboBox SelectedItem="{Binding Variable}" ItemsSource="{Binding VariableList}" Margin="2" Width="280" IsEditable="True"/>
                                    <ComboBox SelectedItem="{Binding Condition}" ItemsSource="{Binding ConditionList}" Margin="2" Width="70"/>
                                    <ComboBox Text="{Binding Value}" ItemsSource="{Binding ValueList}" Margin="2" Width="280" IsEditable="True"/>
                                    <Button  Height="25" Width="25" Margin="0" Style="{DynamicResource MetroCircleButtonStyle}" Command="{Binding DataContext.RemoveConditionCommand, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" CommandParameter="{Binding}" HorizontalAlignment="Right">
                                        <Rectangle Width="10" Height="10">
                                            <Rectangle.Fill>
                                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_delete}" />
                                            </Rectangle.Fill>
                                        </Rectangle>
                                    </Button>
                                    <Button Content="?" Height="25" Width="25" Margin="0" Style="{DynamicResource MetroCircleButtonStyle}" Command="{Binding DataContext.GetValueCommand, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" CommandParameter="{Binding}" HorizontalAlignment="Right"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</controls:MetroWindow>
