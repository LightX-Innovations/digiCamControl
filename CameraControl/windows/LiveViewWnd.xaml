<Controls:MetroWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:local="clr-namespace:CameraControl.Controls"
                      xmlns:T="clr-namespace:CameraControl.Core.Translation;assembly=CameraControl.Core"
                      xmlns:Devices="clr-namespace:CameraControl.Devices;assembly=CameraControl.Devices"
                      xmlns:Classes="clr-namespace:CameraControl.Core.Classes;assembly=CameraControl.Core"
                      xmlns:ViewModel="clr-namespace:CameraControl.ViewModel"
                      xmlns:Core="clr-namespace:CameraControl.Core;assembly=CameraControl.Core"
                      xmlns:wpf="clr-namespace:CameraControl.Core.Wpf;assembly=CameraControl.Core"
                      xmlns:local1="clr-namespace:CameraControl.Core.Controls.ZoomAndPan;assembly=CameraControl.Core"
                      xmlns:ControlzEx="clr-namespace:ControlzEx;assembly=MahApps.Metro"
                      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                      x:Class="CameraControl.windows.LiveViewWnd"
    
                    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
                    TextElement.FontWeight="Regular"
                    TextElement.FontSize="13"
                    TextOptions.TextFormattingMode="Ideal"
                    TextOptions.TextRenderingMode="Auto"
                    Background="{DynamicResource MaterialDesignPaper}"
                    FontFamily="{DynamicResource MaterialDesignFont}" 
                    GlowBrush="{DynamicResource AccentColorBrush}"   
    
        Title="{Binding Title}" Height="800" Width="750" Loaded="Window_Loaded" Closed="Window_Closed" Closing="Window_Closing"
                      mc:Ignorable="d" d:DataContext="{d:DesignInstance Type={x:Type Classes:LiveviewSettings}}" Topmost="{Binding StayOnTop, Mode=OneWay}" PreviewKeyDown="MetroWindow_PreviewKeyDown"
                      SizeChanged="MetroWindow_SizeChanged" Drop="MetroWindow_Drop" AllowDrop="True" UseLayoutRounding="True" StateChanged="MetroWindow_StateChanged">
    <Controls:MetroWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />-->
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />-->
                <ResourceDictionary Source="../Resources/Icons.xaml" />
                <ResourceDictionary Source="../Resources/MoreIcons.xaml" />
                <!--<ResourceDictionary Source="../Styles/ExpanderEx.xaml" />-->
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/VS/Colors.xaml"/>-->
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/VS/Styles.xaml"/>-->
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />-->
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseDark.xaml" />-->
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />-->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Snackbar.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter1" />
            <!-- MoveThumb Template -->
            <ControlTemplate x:Key="MoveThumbTemplate" TargetType="{x:Type wpf:MoveThumb}">
                <Rectangle Fill="Transparent"/>
            </ControlTemplate>
            <Style x:Key="ZoomStyle"
        TargetType="{x:Type local1:ZoomAndPanControl}"
        >

                <Setter 
                    Property="Template"
            >
                    <Setter.Value>

                        <ControlTemplate 
                            TargetType="{x:Type local1:ZoomAndPanControl}"
                    >

                            <Border 
                                Visibility="{TemplateBinding ZoneOneVisibility}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                        >

                                <!-- 
                        The ContentPresenter is used to scale and offset the content of ZoomAndPanControl.
                    
                        A transforms computed from 'ContentScale', 'ContentOffsetX' and 'ContentOffsetY' are assigned 
                        to the 'RenderTransform' property in OnApplyTemplate in ZoomAndPanControl.cs.
                        
                        The alignment is set to top-left.  This allows the content offset to be used to place
                        the content in the center of the viewport when the viewport is bigger than the content.
                        -->
                                <ContentPresenter 
                                    x:Name="PART_Content"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                            />

                            </Border>

                        </ControlTemplate>

                    </Setter.Value>
                </Setter>

            </Style>

            <!-- ResizeDecorator Template -->
            <ControlTemplate x:Key="ResizeDecoratorTemplate" TargetType="{x:Type Control}">
                <Grid>
                    <wpf:ResizeThumb Height="3" Cursor="SizeNS" Margin="0 -4 0 0"
                        VerticalAlignment="Top" HorizontalAlignment="Stretch"/>
                    <wpf:ResizeThumb Width="3" Cursor="SizeWE" Margin="-4 0 0 0"
                        VerticalAlignment="Stretch" HorizontalAlignment="Left"/>
                    <wpf:ResizeThumb Width="3" Cursor="SizeWE" Margin="0 0 -4 0"
                        VerticalAlignment="Stretch" HorizontalAlignment="Right"/>
                    <wpf:ResizeThumb Height="3" Cursor="SizeNS" Margin="0 0 0 -4"
                        VerticalAlignment="Bottom" HorizontalAlignment="Stretch"/>
                    <wpf:ResizeThumb Width="7" Height="7" Cursor="SizeNWSE" Margin="-6 -6 0 0"
                        VerticalAlignment="Top" HorizontalAlignment="Left"/>
                    <wpf:ResizeThumb Width="7" Height="7" Cursor="SizeNESW" Margin="0 -6 -6 0"
                        VerticalAlignment="Top" HorizontalAlignment="Right"/>
                    <wpf:ResizeThumb Width="7" Height="7" Cursor="SizeNESW" Margin="-6 0 0 -6"
                        VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
                    <wpf:ResizeThumb Width="7" Height="7" Cursor="SizeNWSE" Margin="0 0 -6 -6"
                        VerticalAlignment="Bottom" HorizontalAlignment="Right"/>
                </Grid>
            </ControlTemplate>


            <!-- Designer Item Template-->
            <ControlTemplate x:Key="DesignerItemTemplate" TargetType="{x:Type ContentControl}">
                <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                    <wpf:MoveThumb Template="{StaticResource MoveThumbTemplate}" Cursor="SizeAll"/>
                    <Control Template="{StaticResource ResizeDecoratorTemplate}"/>
                    <ContentPresenter Content="{TemplateBinding Content}"/>
                </Grid>
            </ControlTemplate>
        </ResourceDictionary>

    </Controls:MetroWindow.Resources>
    <Controls:MetroWindow.DataContext>
        <ViewModel:LiveViewViewModel/>
    </Controls:MetroWindow.DataContext>
    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Button Content="{T:Translate ButtonHelp}" x:Name="btn_help" Click="btn_help_Click" Visibility="{Binding OnlineReference, Converter={StaticResource BooleanToVisibilityConverter1}, Source={x:Static Core:ServiceProvider.Branding}}"/>
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="140" />
            <RowDefinition Height="100" />
            <RowDefinition Height="70*" />
            <RowDefinition Height="459*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" MaxWidth="350"/>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>


        <Image x:Name="_image" Stretch="Uniform" Grid.Column="2" MouseDown="image1_MouseDown" Source="{Binding Bitmap}" Grid.RowSpan="4" Opacity="{Binding Value, ElementName=slider_transparent}" RenderTransformOrigin="0.5,0.5" MouseWheel="_image_MouseWheel">
            <Image.InputBindings>
                <MouseBinding Gesture="LeftDoubleClick" Command="{Binding AutoFocusCommand}" />
            </Image.InputBindings>
            <Image.LayoutTransform>
                <RotateTransform  Angle="{Binding Rotation}" />
            </Image.LayoutTransform>
        </Image>
        <local1:ZoomAndPanControl x:Name="zoomAndPanControl" MouseWheel="zoomAndPanControl_MouseWheel" Grid.Row="0" Grid.RowSpan="4" Grid.Column="2" Style="{StaticResource ZoomStyle}" 
            ZoneOneVisibility="{Binding PreviewBitmapVisible, Converter={StaticResource BooleanToVisibilityConverter1}}" SizeChanged="zoomAndPanControl_SizeChanged" MouseDoubleClick="zoomAndPanControl_MouseDoubleClick" ClipToBounds="True">
            <Image x:Name="PreviewBitmap" Stretch="Uniform" Source="{Binding PreviewBitmap}" RenderTransformOrigin="0.5,0.5" Grid.Row="0" Grid.RowSpan="4" Grid.Column="2"
                Width="{Binding ActualWidth, ElementName=_image}" Height="{Binding ActualHeight, ElementName=_image}" >
                <Image.LayoutTransform>
                    <RotateTransform  Angle="{Binding Rotation}" />
                </Image.LayoutTransform>
            </Image>
        </local1:ZoomAndPanControl>
        <Button Grid.Row="0" Grid.Column="2" Height="40" Width="40" Margin="10" Style="{DynamicResource MaterialDesignFloatingActionLightButton}" HorizontalAlignment="Center" VerticalAlignment="Top" Command="{Binding ClosePreviewCommand}"
            ToolTip="{T:Translate LabelClosePreview}" Visibility="{Binding PreviewBitmapVisible, Converter={StaticResource BooleanToVisibilityConverter1}}">
            <materialDesign:PackIcon Kind="Close" Height="35" Width="35" />
        </Button>


        <Grid Grid.Column="2" Grid.Row="0" Grid.RowSpan="4">
            <Grid.LayoutTransform>
                <RotateTransform  Angle="{Binding Rotation}" />
            </Grid.LayoutTransform>
            <Viewbox Stretch="Fill" ClipToBounds="True" Width="{Binding ActualWidth, ElementName=_image}" Height="{Binding ActualHeight, ElementName=_image}"
                Visibility="{Binding SettingArea, Converter={StaticResource BooleanToVisibilityConverter1}}">
                <Canvas Width="1000" Height="1000">
                    <Path Fill="#80000000">
                        <Path.Data>
                            <CombinedGeometry GeometryCombineMode="Xor">
                                <CombinedGeometry.Geometry1>
                                    <RectangleGeometry Rect="0,0,1000,1000"/>
                                </CombinedGeometry.Geometry1>
                                <CombinedGeometry.Geometry2>
                                    <RectangleGeometry x:Name="transparentRect" Rect="{Binding RullerRect}"/>
                                </CombinedGeometry.Geometry2>
                            </CombinedGeometry>
                        </Path.Data>
                    </Path>
                    <ContentControl Width="{Binding HorizontalMax, Mode=TwoWay}"
                        Height="{Binding VerticalMax, Mode=TwoWay}"
                        Canvas.Top="{Binding VerticalMin, Mode=TwoWay}"
                        Canvas.Left="{Binding HorizontalMin, Mode=TwoWay}"
                        Template="{StaticResource DesignerItemTemplate}">
                        <!--<Rectangle Opacity="0.4" Fill="Black" IsHitTestVisible="False"/>-->
                    </ContentControl>
                </Canvas>
            </Viewbox>
        </Grid>

        <StackPanel Grid.Column="2" Background="#35000000" Grid.Row="0" Grid.RowSpan="4" Margin="5" Orientation="Horizontal" Visibility="{Binding Recording, Converter={StaticResource BooleanToVisibilityConverter1}}" VerticalAlignment="Top" HorizontalAlignment="Right">
            <Label  Content="REC" Height="41" FontSize="20" FontWeight="Bold" Foreground="Red" Width="45"/>
            <Label  Content="{Binding MovieTimeRemain}" Height="41" FontSize="20" FontWeight="Bold" Margin="5,0" Width="60"/>
        </StackPanel>

        <StackPanel  Background="#35000000" Grid.Column="2" VerticalAlignment="Top" HorizontalAlignment="Left"  Grid.Row="0" Margin="5" Orientation="Horizontal" Visibility="{Binding HaveSoundData, Converter={StaticResource BooleanToVisibilityConverter}}">
            <StackPanel>
                <local:VUMeterControl Value="{Binding SoundL}" Width="10" Height="50" Margin="2"  MaxValue="100" BlockCount="14" HighLevel="13" MiddleLevel="10" PeakValue="{Binding PeakSoundL}" />
                <Label Content="L" Padding="0" HorizontalContentAlignment="Center"/>
            </StackPanel>
            <StackPanel>
                <local:VUMeterControl Value="{Binding SoundR}" Width="10" Height="50" Margin="2"  MaxValue="100" BlockCount="14" HighLevel="13" MiddleLevel="10" PeakValue="{Binding PeakSoundL}"/>
                <Label Content="R" Padding="0" HorizontalContentAlignment="Center"/>
            </StackPanel>
        </StackPanel>
        <materialDesign:Card Grid.Column="2" VerticalAlignment="Top" HorizontalAlignment="Right"  Grid.Row="0" IsEnabled="{Binding FocusingEnabled}" Grid.RowSpan="4" Margin="10,30,10,10">
            <StackPanel Margin="4">
                <Button Height="40" Width="40" Margin="4" Style="{DynamicResource MaterialDesignFloatingActionLightButton}" HorizontalAlignment="Center" Command="{Binding FullScreenCommand}">
                    <materialDesign:PackIcon Kind="Fullscreen" Width="20" Height="20"/>
                </Button>
                <Button Height="40" Width="40" Margin="4" Style="{DynamicResource MaterialDesignFloatingActionLightButton}" HorizontalAlignment="Center" Command="{Binding ZoomOutCommand}">
                    <materialDesign:PackIcon Kind="MagnifyMinus" Width="20" Height="20"/>
                </Button>
                <Button Height="40" Width="40" Margin="4" Style="{DynamicResource MaterialDesignFloatingActionLightButton}" HorizontalAlignment="Center" Command="{Binding ZoomInCommand}">
                    <materialDesign:PackIcon Kind="MagnifyPlus" Width="20" Height="20"/>
                </Button>
                <Button Content="100" Height="40" Width="40" Margin="4" Style="{DynamicResource MaterialDesignFloatingActionLightButton}" HorizontalAlignment="Center" Command="{Binding ZoomIn100}"/>
                <Button Height="40" Width="40" Margin="4" Style="{DynamicResource MaterialDesignFloatingActionLightButton}" HorizontalAlignment="Center" Command="{Binding ToggleGridCommand}">
                    <materialDesign:PackIcon Kind="Grid" Width="20" Height="20"/>
                </Button>
                <ToggleButton Height="40" Width="40" Style="{DynamicResource MaterialDesignActionLightToggleButton}" IsChecked="{Binding FreezeImage}" ToolTip="{T:Translate ButtonFreezeImage}" Margin="4">
                    <materialDesign:PackIcon Kind="Pause" Width="20" Height="20"/>
                </ToggleButton>
                <ToggleButton  ToolTip="{T:Translate LabelEdgeDetection}" Height="40" Width="40" Margin="4" IsChecked="{Binding EdgeDetection}" Style="{DynamicResource MaterialDesignActionLightToggleButton}" >
                    <materialDesign:PackIcon Kind="ContrastCircle" Width="20" Height="20"/>
                </ToggleButton>
                <Canvas Width="40" Height="40" Margin="4" RenderTransformOrigin="0.5,0.5" ToolTip="{Binding LevelAngle}"
                Visibility="{Binding ShowLevelLiveView, Converter={StaticResource BooleanToVisibilityConverter1}, Source={x:Static Core:ServiceProvider.Branding}}">
                    <Path x:Name="Cutter" Width="30" Height="30" RenderTransformOrigin="0.5,0.5"  Canvas.Left="5" Canvas.Top="5" Stretch="Fill" Fill="{Binding LevelAngleColor}" Data="F1 M 56,36L 56,40L 40,40L 40,56L 36,56L 36,40L 20,40L 20,36L 36,36L 36,20L 40,20L 40,36L 56,36 Z M 8,37L 8,39L 3.01401,39L 3,38L 3.01401,37L 8,37 Z M 13,37L 13,39L 10,39L 10,37L 13,37 Z M 18,37L 18,39L 15,39L 15,37L 18,37 Z M 39,8.00005L 37,8.00005L 37,3.01403L 38,3.00002L 39,3.01403L 39,8.00005 Z M 39,18.0001L 37,18.0001L 37,15.0001L 39,15.0001L 39,18.0001 Z M 37,10.0001L 39,10.0001L 39,13.0001L 37,13.0001L 37,10.0001 Z M 68,39L 68,37L 72.986,37L 73,38L 72.986,39L 68,39 Z M 63,39L 63,37L 66,37L 66,39L 63,39 Z M 57.9999,39L 57.9999,37L 61,37L 61,39L 57.9999,39 Z M 37,68L 39,68L 39,72.986L 38,73L 37,72.986L 37,68 Z M 37,63L 39,63L 39,66L 37,66L 37,63 Z M 37,58L 39,58L 39,61L 37,61L 37,58 Z ">
                        <Path.RenderTransform>
                            <RotateTransform Angle="{Binding LevelAngle}"  />
                        </Path.RenderTransform>
                    </Path>
                    <Path Width="40" Height="40" Stretch="Uniform" Fill="{DynamicResource BlackBrush}" Data="F1 M 66.6667,1.52588e-005C 29.907,1.52588e-005 0,29.907 0,66.6667C 0,103.425 29.907,133.333 66.6667,133.333C 103.427,133.333 133.333,103.425 133.333,66.6667C 133.333,29.907 103.427,1.52588e-005 66.6667,1.52588e-005 Z M 72.0429,122.315L 72.0429,104.302L 61.2904,104.302L 61.2904,122.318C 34.7428,119.772 13.5612,98.5912 11.0176,72.043L 29.0332,72.043L 29.0332,61.2904L 11.0176,61.2904C 13.5625,34.7428 34.7428,13.5625 61.2904,11.0176L 61.2904,29.0319L 72.0429,29.0319L 72.0429,11.0176C 98.5912,13.5612 119.772,34.7416 122.315,61.2904L 104.302,61.2904L 104.302,72.043L 122.318,72.043C 119.772,98.5912 98.5912,119.772 72.0429,122.315 Z "/>
                </Canvas>
            </StackPanel>
        </materialDesign:Card>
        <!--Focus control bar-->
        <materialDesign:Card Grid.Column="2" VerticalAlignment="Bottom"  Grid.Row="3" IsEnabled="{Binding FocusingEnabled}" Margin="0,30" HorizontalAlignment="Center"
                             Visibility="{Binding ShowFocusControlLiveView, Converter={StaticResource BooleanToVisibilityConverter1}, Source={x:Static Core:ServiceProvider.Branding}}">
            <StackPanel Margin="4">
                <StackPanel.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="{T:Translate LabelCurrentLockNear}" Command="{Binding LockCurrentNearCommand}"/>
                        <MenuItem Header="{T:Translate LabelCurrentLockFar}" Command="{Binding LockCurrentFarCommand}"/>
                    </ContextMenu>
                </StackPanel.ContextMenu>

                <ProgressBar Width="{Binding ActualWidth, ElementName=StackPanel}" Height="5" Visibility="{Binding FocusProgressVisible, Converter={StaticResource BooleanToVisibilityConverter1}}" Value="{Binding FocusProgressValue}" Maximum="{Binding FocusProgressMax}"/>
                <StackPanel HorizontalAlignment="Center" Margin="0" Orientation="Horizontal" x:Name="StackPanel">
                    <ToggleButton IsChecked="{Binding LockA}" Margin="4" Style="{StaticResource MaterialDesignActionLightToggleButton}" Height="40" Width="40"
                                  ToolTip="{T:Translate LabelLockNear}">
                        <ToggleButton.Content>
                            <materialDesign:PackIcon  Kind="LockOpen" />
                        </ToggleButton.Content>
                        <materialDesign:ToggleButtonAssist.OnContent >
                            <materialDesign:PackIcon Kind="Lock" />
                        </materialDesign:ToggleButtonAssist.OnContent>
                    </ToggleButton>

                    <Button Margin="4" Content="|&lt;" Command="{Binding MoveACommand}" IsEnabled="{Binding LockA}" Style="{DynamicResource MaterialDesignFloatingActionMiniLightButton}" Visibility="{Binding AdvancexFocusStacking, Converter={StaticResource BooleanToVisibilityConverter1}}" ToolTip="{T:Translate LabelGoNear}"/>

                    <Button Margin="4" Content="&lt;&lt;&lt;" Command="{Binding FocusMMMCommand}" FontWeight="Bold" Style="{DynamicResource MaterialDesignFloatingActionMiniLightButton}" ToolTip="{T:Translate LabelMoveLargeToCamera}"/>
                    <Button Margin="4" Content="&lt;&lt;" Command="{Binding FocusMMCommand}" FontWeight="Bold" Style="{DynamicResource MaterialDesignFloatingActionMiniLightButton}" ToolTip="{T:Translate LabelMoveMediumToCamera}"/>
                    <Button Margin="4" Content="&lt;" Command="{Binding FocusMCommand}" FontWeight="Bold" Style="{DynamicResource MaterialDesignFloatingActionMiniLightButton}" ToolTip="{T:Translate LabelMoveSmallToCamera}"/>

                    <Label Content="{Binding CounterMessage}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" ToolTip="{T:Translate LabelDistantFromPoints}"/>

                    <Button Margin="4" Content="&gt;" Command="{Binding FocusPCommand}" FontWeight="Bold" Style="{DynamicResource MaterialDesignFloatingActionMiniLightButton}" ToolTip="{T:Translate LabelMoveSmallToInfinity}"/>
                    <Button Margin="4" Content="&gt;&gt;" Command="{Binding FocusPPCommand}" FontWeight="Bold" Style="{DynamicResource MaterialDesignFloatingActionMiniLightButton}" ToolTip="{T:Translate LabelMoveMediumToInfinity}"/>
                    <Button Margin="4" Content="&gt;&gt;&gt;" Command="{Binding FocusPPPCommand}" FontWeight="Bold" Style="{DynamicResource MaterialDesignFloatingActionMiniLightButton}" ToolTip="{T:Translate LabelMoveLargeToInfinity}"/>

                    <Button Margin="4" Content="&gt;|" Command="{Binding MoveBCommand}" IsEnabled="{Binding LockB}" Style="{DynamicResource MaterialDesignFloatingActionMiniLightButton}" Visibility="{Binding AdvancexFocusStacking, Converter={StaticResource BooleanToVisibilityConverter1}}" ToolTip="{T:Translate LabelGoFar}"/>

                    <ToggleButton IsChecked="{Binding LockB}" Margin="4" Style="{StaticResource MaterialDesignActionLightToggleButton}" Height="40" Width="40"
                                  ToolTip="{T:Translate LabelLockFar}">
                        <ToggleButton.Content>
                            <materialDesign:PackIcon  Kind="LockOpen" />
                        </ToggleButton.Content>
                        <materialDesign:ToggleButtonAssist.OnContent >
                            <materialDesign:PackIcon Kind="Lock" />
                        </materialDesign:ToggleButtonAssist.OnContent>
                    </ToggleButton>

                </StackPanel>
                <Slider Maximum="{Binding FocusValue}" IsEnabled="{Binding LockB}" Value="{Binding SelectedFocusValue, UpdateSourceTrigger=PropertyChanged}" AutoToolTipPlacement="BottomRight" TickFrequency="{Binding FocusStep}" Width="440" Visibility="{Binding AdvancexFocusStacking, Converter={StaticResource BooleanToVisibilityConverter1}}" TickPlacement="BottomRight" SmallChange="10" LargeChange="100" IsMoveToPointEnabled="True" />
            </StackPanel>
        </materialDesign:Card>

        <ToggleButton Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" Name="PanelButton" VerticalAlignment="Center" Grid.RowSpan="5" IsChecked="True"
                      Margin="0" Width="24" Height="24" Style="{StaticResource MaterialDesignFlatToggleButton}" Cursor="Hand" >
            <materialDesign:PackIcon Width="21" Height="21" Kind="DotsVertical" />
        </ToggleButton>
        <!--<Expander ExpandDirection="Right" IsExpanded="{Binding ShowLeftTab}" Margin="0" Padding="0" 
            Style="{DynamicResource MetroExpanderEx}">-->
        <Grid Grid.Row="0" Grid.Column="0" Grid.RowSpan="4"  MinWidth="250" Visibility="{Binding ElementName=PanelButton, Path=IsChecked , Converter={StaticResource BooleanToVisibilityConverter1}}" Margin="15,0,0,3">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="72*" />
                <RowDefinition Height="475*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Button Content="{T:Translate ButtonAutoFocus}" Height="30" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="112" Command="{Binding AutoFocusCommand}" 
                    Visibility="{Binding ShowAutofocusLiveView, Converter={StaticResource BooleanToVisibilityConverter1}, Source={x:Static Core:ServiceProvider.Branding}}"/>

            <Button Grid.Row="0" Grid.Column="0" Content="{T:Translate ButtonCapture}" Height="30" Margin="0,10,10,0" Command="{Binding CaptureCommand}" VerticalAlignment="Top" HorizontalAlignment="Right" Width="101" IsEnabled="{Binding IsFree}"/>
            <Button Grid.Row="0" Grid.Column="0" Content="{T:Translate ButtonCancel}" Height="30" Margin="0,10,10,0" Command="{Binding CancelCaptureCommand}" VerticalAlignment="Top" HorizontalAlignment="Right" Width="101" 
                    Visibility="{Binding CaptureInProgress, Converter={StaticResource BooleanToVisibilityConverter1}}"/>

            <Button Grid.Row="0" Content="{Binding RecButtonText}" Height="30" Margin="10,50,10,0" Command="{Binding RecordMovieCommand}" VerticalAlignment="Top" IsEnabled="{Binding IsFree}" HorizontalAlignment="Left" Width="112"/>

            <Button Grid.Row="0" Content="{T:Translate ButtonPreview}" Height="30" Margin="10,50,10,0" Command="{Binding PreviewCommand}" VerticalAlignment="Top" IsEnabled="{Binding IsFree}" HorizontalAlignment="Right" Width="101"/>


            <Image Width="200"  Height="120" Margin="10" VerticalAlignment="Top" Grid.Row="1" Source="{Binding Preview}" x:Name="_previeImage" MouseDown="canvas_image_MouseDown" HorizontalAlignment="Left" Stretch="Uniform"
                    RenderOptions.BitmapScalingMode="HighQuality">
                <Image.LayoutTransform>
                    <RotateTransform  Angle="{Binding Rotation}" />
                </Image.LayoutTransform>
            </Image>

            <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Row="2" Grid.RowSpan="2">
                <StackPanel>
                    <StackPanel.ScrollOwner>
                        <ScrollViewer />
                    </StackPanel.ScrollOwner>
                    <materialDesign:Card Margin="4" Visibility="{Binding ShowLuminosityLiveView, Converter={StaticResource BooleanToVisibilityConverter1}, Source={x:Static Core:ServiceProvider.Branding}}">
                        <Expander Header="{T:Translate LabelLuminosity}" IsExpanded="{Binding ShowHistogram}">
                            <Grid Height="75" Margin="4">
                                <Polygon Points="{Binding LuminanceHistogramPoints}" Stretch="Fill" Fill="LightGray" Opacity="1" />
                                <Polygon Points="{Binding RedColorHistogramPoints}" Stretch="Fill" Fill="Red" Opacity="0.9" />
                                <Polygon Points="{Binding GreenColorHistogramPoints}" Stretch="Fill" Fill="Green" Opacity="0.7"/>
                                <Polygon Points="{Binding BlueColorHistogramPoints}" Stretch="Fill" Fill="Blue" Opacity="0.5" />

                                <CheckBox IsChecked="{Binding HighlightUnderExp}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="18"/>
                                <CheckBox VerticalAlignment="Top" HorizontalAlignment="Right" Width="18" IsChecked="{Binding HighlightOverExp}"/>
                            </Grid>
                        </Expander>
                    </materialDesign:Card>
                    <materialDesign:Card Margin="4" Visibility="{Binding ShowControlLiveView, Converter={StaticResource BooleanToVisibilityConverter1}, Source={x:Static Core:ServiceProvider.Branding}}">
                        <Expander Header="{T:Translate LabelControl}" IsEnabled="{Binding IsFree}" >
                            <Grid Margin="4">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="{T:Translate LabelCaptureDelay}" Margin="3" />
                                <Controls:NumericUpDown Minimum="0" Value="{Binding CaptureDelay}" IsEnabled="{Binding IsFree}" Margin="3" Grid.Column="1" Grid.Row="0"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="{T:Translate LabelCaptureCount}" Margin="3" />
                                <Controls:NumericUpDown Minimum="1" Value="{Binding CaptureCount}" IsEnabled="{Binding IsFree}" Margin="3" Grid.Column="1" Grid.Row="1" />

                                <CheckBox Grid.Row="2" Grid.Column="0" Content="{T:Translate LabelAutoFocusBeforCapture}" Margin="3" IsChecked="{Binding AutoFocusBeforCapture}" Grid.ColumnSpan="2"/>


                                <local:LiveViewControlerSimple DataContext="{Binding CameraDevice}" Margin="20,3" Grid.ColumnSpan="2"
                                    Grid.Column="0" Grid.Row="3"  />
                            </Grid>
                        </Expander>
                    </materialDesign:Card>
                    <materialDesign:Card Margin="4" Visibility="{Binding ShowDisplayLiveView, Converter={StaticResource BooleanToVisibilityConverter1}, Source={x:Static Core:ServiceProvider.Branding}}">
                        <Expander Header="{T:Translate LabelDisplay}"  >
                            <Grid Margin="4">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="5" />
                                    <ColumnDefinition Width="88*" />
                                    <ColumnDefinition Width="5" />
                                    <ColumnDefinition Width="90*" />
                                    <ColumnDefinition Width="5"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Label Content="{T:Translate LabelGrid}" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                                <ComboBox Grid.Row="0" Grid.Column="3" Margin="3" SelectedIndex="{Binding GridType}" ItemsSource="{Binding Grids}"/>

                                <ComboBox IsEnabled="{Binding CameraDevice.LiveViewImageZoomRatio.IsEnabled}" ItemsSource="{Binding CameraDevice.LiveViewImageZoomRatio.Values}" Grid.Row="1" Grid.Column="3" Margin="3" SelectedItem="{Binding CameraDevice.LiveViewImageZoomRatio.Value}"/>
                                <Label Content="{T:Translate LabelLvZoomRation}" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" />

                                <Label Grid.Row="2" Grid.Column="1" Margin="3" Content="{T:Translate LabelGridColor}" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <wpf:Colorpicker Grid.Row="2" Grid.Column="3" Margin="3" SelectedColor="{Binding GridColor, Mode=TwoWay}" />


                                <Label Content="{T:Translate LabelBrightness}" Grid.Column="1" Grid.Row="4" Grid.ColumnSpan="3" />
                                <Slider Maximum="255" Minimum="-255" Value="{Binding Brightness}" Grid.Row="5" Grid.ColumnSpan="3" Grid.Column="1" TickFrequency="255" TickPlacement="BottomRight">
                                    <Slider.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="{T:Translate LabelReset}" Command="{Binding ResetBrigthnessCommand}" />
                                        </ContextMenu>
                                    </Slider.ContextMenu>
                                </Slider>
                                <CheckBox Content="B&amp;W" IsChecked="{Binding BlackAndWhite}" Grid.Row="6" Grid.Column="1" VerticalAlignment="Center" Margin="2"/>
                                <CheckBox Content="{T:Translate LabelInvert}" IsChecked="{Binding Invert}" Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="3" Margin="2"/>
                                <CheckBox Content="{T:Translate LabelShowFocusRect}" IsChecked="{Binding ShowFocusRect}" Grid.Row="8" Grid.Column="1" Grid.ColumnSpan="3" Margin="2"/>
                                <CheckBox Content="{T:Translate LabelShowActiveArea}" IsChecked="{Binding ShowRuler}" Grid.Row="9" Grid.Column="1" Grid.ColumnSpan="3" Margin="2"/>

                                <Button Content="{T:Translate LabelSetArea}" Grid.Row="9" Grid.Column="1" Grid.ColumnSpan="3" Margin="2" HorizontalAlignment="Right" Command="{Binding SetAreaCommand}" Visibility="{Binding NoSettingArea, Converter={StaticResource BooleanToVisibilityConverter1}}"/>
                                <Button Content="{T:Translate LabelDoneArea}" Grid.Row="9" Grid.Column="1" Grid.ColumnSpan="3" Margin="2" HorizontalAlignment="Right" Command="{Binding DoneSetAreaCommand}" Visibility="{Binding SettingArea, Converter={StaticResource BooleanToVisibilityConverter1}}"/>

                                <Rectangle Fill="{Binding NoProcessingWarnColor}" Grid.Row="10" Grid.Column="1" Grid.ColumnSpan="3" />
                                <CheckBox Content="{T:Translate LabelNoProccesing}" ToolTip="{T:Translate LabelNoProccesingTooltip}" IsChecked="{Binding NoProcessing}" Grid.Row="10" Grid.Column="1" Grid.ColumnSpan="3" Margin="2" />
                                <CheckBox Content="{T:Translate LabelFlip}" IsChecked="{Binding FlipImage}" Grid.Row="11" Grid.Column="1" Grid.ColumnSpan="3" Margin="2" />
                                <CheckBox Content="{T:Translate LabelShowFocusControlBar}" IsChecked="{Binding ShowFocusControlLiveView, Source={x:Static Core:ServiceProvider.Branding}}" Grid.Row="12" Grid.Column="1" Grid.ColumnSpan="3" Margin="2" />

                                <Label Content="{T:Translate LabelLiveViewRotation}" Grid.Column="1" Grid.Row="13" />
                                <ComboBox SelectedIndex="{Binding RotationIndex}" Grid.Row="13" Grid.Column="3" Margin="3">
                                    <ComboBoxItem Content="{T:Translate LabelRotateNone}" />
                                    <ComboBoxItem Content="{T:Translate LabelRotate90}" />
                                    <ComboBoxItem Content="{T:Translate LabelRotate180}" />
                                    <ComboBoxItem Content="{T:Translate LabelRotate270}" />
                                    <ComboBoxItem Content="{T:Translate LabelAutoRotate}" />
                                </ComboBox>

                                <Label Content="{T:Translate LabelCropMargins}" Grid.Column="1" Grid.Row="14" />
                                <Controls:NumericUpDown Minimum="0" Maximum="100" Value="{Binding CropRatio}" IsEnabled="{Binding IsFree}" Margin="3" Grid.Column="3" Grid.Row="14" />

                                <Label Content="{T:Translate LabelLiveViewPreviewTime}" Grid.Column="1" Grid.Row="15" Grid.ColumnSpan="3"/>
                                <Controls:NumericUpDown Minimum="0" Value="{Binding PreviewTime}" IsEnabled="{Binding IsFree}" Margin="3" Grid.Column="1" Grid.Row="16" Grid.ColumnSpan="3"/>

                            </Grid>
                        </Expander>
                    </materialDesign:Card>
                    <materialDesign:Card Margin="4" Visibility="{Binding ShowOverlayLiveView, Converter={StaticResource BooleanToVisibilityConverter1}, Source={x:Static Core:ServiceProvider.Branding}}">
                        <Expander Header="{T:Translate LabelOverlay}">
                            <Grid Margin="4">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100*"/>
                                    <ColumnDefinition Width="29" MaxWidth="28"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" MinHeight="22" />
                                    <RowDefinition Height="Auto" MinHeight="26" />
                                    <RowDefinition Height="Auto" MinHeight="22" />
                                    <RowDefinition Height="Auto" MinHeight="26" />
                                    <RowDefinition Height="Auto" MinHeight="22" />
                                    <RowDefinition Height="Auto" MinHeight="26" />
                                    <RowDefinition Height="Auto" MinHeight="22" />
                                    <RowDefinition Height="Auto" MinHeight="26" />
                                    <RowDefinition Height="Auto" MinHeight="27" />
                                </Grid.RowDefinitions>

                                <ComboBox Margin="2,2,3,2" Grid.Column="0" Grid.ColumnSpan="2" SelectedValue ="{Binding SelectedOverlay}" SelectedValuePath="Value" DisplayMemberPath="Name" ItemsSource="{Binding Overlays}"/>
                                <Button Grid.Row="0" Grid.Column="2" Content="..." Margin="4" Command="{Binding BrowseOverlayCommand}"/>

                                <StackPanel Grid.Row="1" Grid.Column="0" Margin="2,2,3,2" Orientation="Vertical" Grid.ColumnSpan="2">
                                    <CheckBox  Content="{T:Translate LabelActivate}" HorizontalContentAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding OverlayActivated}" />
                                    <CheckBox  Content="{T:Translate LabelOverlayUseLastCaptured}" HorizontalContentAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding OverlayUseLastCaptured}" IsEnabled="{Binding OverlayActivated}"/>
                                </StackPanel>

                                <Label Grid.Row="2" Grid.Column="0" Margin="2,2,3,2" Content="{T:Translate LabelScaling}" Grid.ColumnSpan="3" Padding="1"/>
                                <Slider Grid.Row="3" Grid.Column="0" Margin="2,2,3,2" Minimum="-100" Maximum="100" Value="{Binding OverlayScale}" IsSelectionRangeEnabled="False" TickPlacement="BottomRight" TickFrequency="100" IsEnabled="{Binding OverlayActivated}"/>
                                <Controls:NumericUpDown Minimum="-100" Value="{Binding OverlayScale}" IsEnabled="{Binding OverlayActivated}" Grid.Row="3"  HasDecimals="False" Margin="3,0,1,0" Grid.Column="1" Grid.ColumnSpan="2" Maximum="100" Speedup="False" />

                                <Label Grid.Row="4" Grid.Column="0" Margin="2,2,3,2" Content="{T:Translate LabelHorizontal}" Grid.ColumnSpan="3" Padding="1"/>
                                <Slider Grid.Row="5" Grid.Column="0" Margin="2,2,3,2" Minimum="-100" Maximum="100" Value="{Binding OverlayHorizontal}" IsSelectionRangeEnabled="False" TickPlacement="BottomRight" TickFrequency="100" IsEnabled="{Binding OverlayActivated}" />
                                <Controls:NumericUpDown Minimum="-100" Value="{Binding OverlayHorizontal}" IsEnabled="{Binding OverlayActivated}" Grid.Row="5"  HasDecimals="False" Margin="3,0,1,0" Grid.Column="1" Grid.ColumnSpan="2" Maximum="100" Speedup="False" />

                                <Label Grid.Row="6" Grid.Column="0" Margin="2,2,3,2" Content="{T:Translate LabelVertical}" Grid.ColumnSpan="3" Padding="1"/>
                                <Slider Grid.Row="7" Grid.Column="0" Margin="2,2,3,2" Minimum="-100" Maximum="100" Value="{Binding OverlayVertical}" IsSelectionRangeEnabled="False" TickPlacement="BottomRight" TickFrequency="100" IsEnabled="{Binding OverlayActivated}"/>
                                <Controls:NumericUpDown Minimum="-100" Value="{Binding OverlayVertical}" IsEnabled="{Binding OverlayActivated}" Grid.Row="7"  HasDecimals="False" Margin="3,0,1,0" Grid.Column="1" Grid.ColumnSpan="2" Maximum="100" Speedup="False" />

                                <Label Grid.Row="8" Grid.Column="0" Margin="2,2,3,2" Content="{T:Translate LabelOverlayTransparency}" Grid.ColumnSpan="3" Padding="1"/>
                                <Slider Grid.Row="9" Grid.Column="0" Margin="2,2,3,2" Minimum="0" Maximum="100" Value="{Binding OverlayTransparency}" IsSelectionRangeEnabled="False" TickPlacement="BottomRight" TickFrequency="10" IsEnabled="{Binding OverlayActivated}"/>
                                <Controls:NumericUpDown Minimum="0" Value="{Binding OverlayTransparency}" IsEnabled="{Binding OverlayActivated}" Grid.Row="9"  HasDecimals="False" Margin="3,0,1,0" Grid.Column="1" Grid.ColumnSpan="2" Maximum="100" Speedup="False" />

                                <Button Grid.Column="2" Grid.Row="1" Width="40" Height="40" Style="{StaticResource MaterialDesignFloatingActionLightButton}" ToolTip="{T:Translate LabelReset}" Command="{Binding ResetOverlayCommand}" Margin="4">
                                    <materialDesign:PackIcon Kind="RedoVariant" Height="35" Width="35" />
                                </Button>
                            </Grid>
                        </Expander>
                    </materialDesign:Card>
                    <materialDesign:Card Margin="4" Visibility="{Binding ShowFocusStackingLiveView, Converter={StaticResource BooleanToVisibilityConverter1}, Source={x:Static Core:ServiceProvider.Branding}}">
                        <Expander Header="{T:Translate LabelFocusStackingAdvanced}">
                            <Grid Margin="4">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>
                                <Button Content="{T:Translate ButtonStart}" Command="{Binding StartFocusStackingCommand}" IsEnabled="{Binding IsFree}" Grid.Row="3"  Margin="5"/>
                                <Button Content="{T:Translate ButtonPreview}" Command="{Binding PreviewFocusStackingCommand}" IsEnabled="{Binding IsFree}" Grid.Row="3" Grid.Column="1" Margin="5"/>
                                <Button Content="{T:Translate ButtonStop}" Command="{Binding StopFocusStackingCommand}" Grid.Column="1" IsEnabled="{Binding IsFocusStackingRunning}" Grid.Row="4" Margin="5"/>

                                <Label Grid.Row="0" Grid.Column="0" Content="{T:Translate LabelNoOfPhots}"/>
                                <Controls:NumericUpDown Grid.Row="0" Grid.Column="1" Minimum="1" Value="{Binding PhotoNo}" IsEnabled="{Binding IsFree}" Margin="2"/>

                                <!--<Controls1:AdvancedSlider Minimum="1" Maximum="100" Label="{T:TranslateExtension LabelNoOfPhots}" Grid.ColumnSpan="4" Value="{Binding PhotoNo}" IsEnabled="{Binding IsFree}" />-->

                                <Label Grid.Row="1" Grid.Column="0" Content="{T:Translate LabelFocusStep}"/>
                                <Controls:NumericUpDown Grid.Row="1" Grid.Column="1" Minimum="1" Value="{Binding FocusStep}" IsEnabled="{Binding IsFree}" Margin="2"/>

                                <!--<Controls1:AdvancedSlider Minimum="1" Maximum="1024" Label="{T:TranslateExtension LabelFocusStep}" Grid.ColumnSpan="4" Value="{Binding FocusStep}" IsEnabled="{Binding IsFree}" Grid.Row="1" />-->
                                <ProgressBar  Grid.Row="5" Margin="5" Value="{Binding FocusStackingTick}" Maximum="{Binding WaitTime}" VerticalAlignment="Bottom"/>
                                <Label Content="{Binding PhotoCount}" Grid.Row="4" Margin="5"/>

                                <Label Grid.Row="2" Grid.Column="0" Content="{T:Translate LabelWaitTime}"/>
                                <Controls:NumericUpDown Grid.Row="2" Grid.Column="1" Minimum="0" Value="{Binding WaitTime}" IsEnabled="{Binding IsFree}" Margin="2"/>

                                <Button Grid.Row="5" Grid.Column="1" ToolTip="{T:Translate SessionAdd}" Height="25" Width="25" Margin="0" Style="{DynamicResource MetroCircleButtonStyle}" HorizontalAlignment="Right" Command="{Binding HelpFocusStackingCommand}">
                                    <Rectangle Width="10" Height="10">
                                        <Rectangle.Fill>
                                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_question}" />
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Button>
                            </Grid>
                        </Expander>
                    </materialDesign:Card>
                    <materialDesign:Card Margin="4" Visibility="{Binding ShowFocusStackingLiveView, Converter={StaticResource BooleanToVisibilityConverter1}, Source={x:Static Core:ServiceProvider.Branding}}">
                        <Expander Header="{T:Translate LabelFocusStackingSimple}" >
                            <Grid Margin="4">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Button Content="{T:Translate ButtonStart}" Command="{Binding StartSimpleFocusStackingCommand}" IsEnabled="{Binding IsFree}" Grid.Row="4"  Margin="5"/>
                                <Button Content="{T:Translate ButtonPreview}" Command="{Binding PreviewSimpleFocusStackingCommand}" IsEnabled="{Binding IsFree}" Grid.Row="4" Grid.Column="1" Margin="5"/>
                                <Button Content="{T:Translate ButtonStop}" Command="{Binding StopSimpleFocusStackingCommand}" Grid.Column="1" IsEnabled="{Binding IsFocusStackingRunning}" Grid.Row="5" Margin="5"/>

                                <Label Grid.Row="0" Grid.Column="0" Content="{T:Translate LabelNoOfPhots}"/>
                                <Controls:NumericUpDown Grid.Row="0" Grid.Column="1" Minimum="1" Value="{Binding PhotoNumber}" IsEnabled="{Binding IsFree}" Margin="2"/>

                                <!--<Controls1:AdvancedSlider Minimum="1" Maximum="100" Label="{T:TranslateExtension LabelNoOfPhots}" Grid.ColumnSpan="4" Value="{Binding PhotoNo}" IsEnabled="{Binding IsFree}" />-->

                                <Label Grid.Row="1" Grid.Column="0" Content="{T:Translate LabelDirection}"/>
                                <ComboBox Grid.Row="1" Grid.Column="1"  SelectedIndex="{Binding Direction}" IsEnabled="{Binding IsFree}" Margin="2">
                                    <ComboBoxItem Content="{T:Translate LabelFarNear}" />
                                    <ComboBoxItem Content="{T:Translate LabelNearFar}" />
                                </ComboBox>

                                <Label Grid.Row="2" Grid.Column="0" Content="{T:Translate LabelFocusStep}"/>
                                <ComboBox Grid.Row="2" Grid.Column="1"  SelectedIndex="{Binding FocusStepSize}" IsEnabled="{Binding IsFree}" Margin="2">
                                    <ComboBoxItem Content="{T:Translate LabelStepSmall}" />
                                    <ComboBoxItem Content="{T:Translate LabelStepMedium}" />
                                    <ComboBoxItem Content="{T:Translate LabelStepLarge}" />
                                </ComboBox>
                                <!--<Controls1:AdvancedSlider Minimum="1" Maximum="1024" Label="{T:TranslateExtension LabelFocusStep}" Grid.ColumnSpan="4" Value="{Binding FocusStep}" IsEnabled="{Binding IsFree}" Grid.Row="1" />-->

                                <ProgressBar  Grid.Row="5" Margin="5" Value="{Binding FocusStackingTick}" Maximum="{Binding WaitTime}" VerticalAlignment="Bottom"/>
                                <Label Content="{Binding PhotoCount}" Grid.Row="5" Margin="5"/>

                                <Label Grid.Row="3" Grid.Column="0" Content="{T:Translate LabelWaitTime}"/>
                                <Controls:NumericUpDown Grid.Row="3" Grid.Column="1" Minimum="2" Value="{Binding WaitTime}" IsEnabled="{Binding IsFree}" Margin="2"/>
                            </Grid>
                        </Expander>
                    </materialDesign:Card>
                    <materialDesign:Card Margin="4" Visibility="{Binding ShowMotionDetectionLiveView, Converter={StaticResource BooleanToVisibilityConverter1}, Source={x:Static Core:ServiceProvider.Branding}}">
                        <Expander Header="{T:Translate LabelMotionDetection}" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="5" />
                                    <ColumnDefinition Width="88*" />
                                    <ColumnDefinition Width="5" />
                                    <ColumnDefinition Width="90*" />
                                    <ColumnDefinition Width="5" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <CheckBox Content="{T:Translate LabelActivateMotionDetection}" Grid.Column="1" IsChecked="{Binding DetectMotion}" Grid.ColumnSpan="3" Margin="3" VerticalAlignment="Center"/>
                                <!--<CheckBox Content="{T:TranslateExtension LabelCaptureWhenMove}" Grid.Column="1" Grid.Row="2" IsChecked="{Binding TriggerOnMotion}" Grid.ColumnSpan="3" Margin="3"  VerticalAlignment="Center" IsEnabled="{Binding DetectMotion}"/>-->
                                <ComboBox Grid.Column="3" Grid.Row="2" SelectedIndex="{Binding MotionAction}">
                                    <ComboBoxItem Content="{T:Translate LabelDisabled}"/>
                                    <ComboBoxItem Content="{T:Translate LabelCapturePhoto}"/>
                                    <ComboBoxItem Content="{T:Translate LabelRecordVideo}"/>
                                </ComboBox>
                                <CheckBox Content="{T:Translate LabelAutofocusBeforeCapture}" Grid.Column="1" Grid.Row="1" IsChecked="{Binding MotionAutofocusBeforCapture}" Grid.ColumnSpan="3" Margin="3"  VerticalAlignment="Center" IsEnabled="{Binding DetectMotion}"/>
                                <CheckBox Content="{T:Translate LabelDetectArea}" Grid.Column="1" Grid.Row="3" IsChecked="{Binding DetectMotionArea}" Grid.ColumnSpan="3" Margin="3"  VerticalAlignment="Center" IsEnabled="{Binding DetectMotion}"/>

                                <Label Content="{T:Translate LabelVideoLength}" Margin="3"  Grid.Row="4" Grid.Column="1"/>
                                <Controls:NumericUpDown Minimum="0" Value="{Binding MotionMovieLength}" IsEnabled="{Binding DetectMotion}" Margin="3" Grid.Column="3" Grid.Row="4"/>

                                <Label Content="{T:Translate LabelThreshold}" Grid.Column="1" Grid.Row="5" />
                                <Controls:NumericUpDown Grid.Column="3" Grid.Row="5" Maximum="99" Minimum="1" Value="{Binding MotionThreshold}" Margin="3" IsEnabled="{Binding DetectMotion}"/>
                                <Label Content="{T:Translate LabelWaitMoion}" Grid.Column="1" Grid.Row="6" />
                                <Controls:NumericUpDown Grid.Column="3" Grid.Row="6" Margin="3" Minimum="0" Maximum="3600" Value="{Binding WaitForMotionSec}" IsEnabled="{Binding DetectMotion}"/>
                                <Label Content="{T:Translate LabelCurrentMotion}" Grid.Column="1" Grid.Row="7" />
                                <ProgressBar Grid.Column="3" Grid.Row="7" Maximum="100" Value="{Binding CurrentMotionIndex}" Height="18"/>
                                <Label Grid.Column="3" Grid.Row="7" Content="{Binding CurrentMotionIndex}" HorizontalAlignment="Center"/>
                            </Grid>
                        </Expander>
                    </materialDesign:Card>
                    <materialDesign:Card Margin="4" >
                        <Expander Header="{T:Translate LabelSnapshot}">
                            <Grid Margin="4">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Button Content="{T:Translate LabelCaptureSnapshot}" Margin="5" Grid.ColumnSpan="2" Command="{Binding CaptureSnapshotCommand}"/>

                                <Label Grid.Row="1" Content="{T:Translate LabelCaptureCount}" Margin="3" />
                                <Controls:NumericUpDown Minimum="0" Value="{Binding SnapshotCaptureCount}" IsEnabled="{Binding IsFree}" Margin="3" Grid.Column="1" Grid.Row="1"/>

                                <Label Grid.Row="2" Content="{T:Translate LabelCaptureDelay}" Margin="3" />
                                <Controls:NumericUpDown Minimum="0" Value="{Binding SnapshotCaptureTime}" IsEnabled="{Binding IsFree}" Margin="3" Grid.Column="1" Grid.Row="2"/>

                            </Grid>
                        </Expander>
                    </materialDesign:Card>
                    <materialDesign:Card Margin="4" Visibility="{Binding ZoomSupported, Converter={StaticResource BooleanToVisibilityConverter}}" >
                        <Expander Header="{T:Translate LabelZoom}">
                            <Grid Margin="4">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Button Height="40" Width="40" Margin="4" Style="{DynamicResource MaterialDesignFloatingActionLightButton}" HorizontalAlignment="Center" Name="ButtonZoomMinus" PreviewMouseDown="ButtonZoomMinus_MouseDown" PreviewMouseUp="ButtonZoomMinus_MouseUp" MouseLeave="ButtonZoomMinus_MouseLeave" >
                                    <materialDesign:PackIcon Kind="MinusBox" Width="20" Height="20"/>
                                </Button>
                                <Button Grid.Column="1" Height="40" Width="40" Margin="4" Style="{DynamicResource MaterialDesignFloatingActionLightButton}" HorizontalAlignment="Center" Name="ButtonZoomPlus" PreviewMouseDown="ButtonZoomPlus_MouseDown" MouseLeave="ButtonZoomPlus_MouseLeave" PreviewMouseUp="ButtonZoomPlus_MouseUp">
                                    <materialDesign:PackIcon Kind="PlusBox" Width="20" Height="20"/>
                                </Button>

                            </Grid>
                        </Expander>
                    </materialDesign:Card>
                </StackPanel>
            </ScrollViewer>
        </Grid>
        <!--</Expander>-->



        <!--<Controls:ProgressRing IsActive="{Binding Path=SelectedPortableDevice.IsBusy, RelativeSource={RelativeSource FindAncestor, AncestorType=my:LiveViewWnd, AncestorLevel=1}}" Height="78" Width="81" Canvas.Left="21" Canvas.Top="20" />-->

        <!--<Image Name="img_preview" Margin="31,114,0,0" Height="{Binding ElementName=canvas_image, Path=Height}" HorizontalAlignment="Left" Width="{Binding ElementName=canvas_image, Path=Width}"/>-->
        <materialDesign:Card Width="300" Grid.Column="2" Grid.Row="2" >
            <Grid x:Name="grid_wait" Visibility="{Binding DelayedStart, ConverterParameter=false, Converter={StaticResource BooleanToVisibilityConverter1}}" Margin="4">
                <ProgressBar IsIndeterminate="True" Height="20"/>
                <Label Content="{T:Translate LabelWaitingForDevice}" HorizontalContentAlignment="Center" Height="67" VerticalAlignment="Center" />
            </Grid>
        </materialDesign:Card>
        <Ellipse Width="190" Height="190" Grid.Row="0" Grid.Column="2" Grid.RowSpan="5" Visibility="{Binding CountDownVisible, ConverterParameter=false, Converter={StaticResource BooleanToVisibilityConverter1}}" 
            HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0.8" RenderTransformOrigin="0.5,0.5" StrokeThickness="15"  StrokeDashArray="4 1">
            <Ellipse.Stroke>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="Blue"/>
                    <GradientStop Color="Red" Offset="0.5"/>
                    <GradientStop Color="Green" Offset="1"/>
                </LinearGradientBrush>
            </Ellipse.Stroke>
            <Ellipse.RenderTransform>
                <RotateTransform/>
            </Ellipse.RenderTransform>
            <Ellipse.Triggers>
                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" To="-360" Duration="0:0:2" RepeatBehavior="Forever"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Ellipse.Triggers>
        </Ellipse>

        <Label Grid.Row="0" Grid.Column="2" Grid.RowSpan="4" Content="{Binding CountDown}" FontSize="155" Padding="0" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Visibility="{Binding CountDownVisible, ConverterParameter=false, Converter={StaticResource BooleanToVisibilityConverter1}}" Foreground="#AAFFFFFF" HorizontalAlignment="Center" VerticalAlignment="Center"/>

        <materialDesign:Snackbar
            Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" 
            IsActive="{Binding Source={x:Static Member=Devices:StaticHelper.Instance}, Path=IsActive}">
            <materialDesign:SnackbarMessage Content="{Binding Source={x:Static Member=Devices:StaticHelper.Instance}, Path=SystemMessage}" />
        </materialDesign:Snackbar>

    </Grid>
</Controls:MetroWindow>
